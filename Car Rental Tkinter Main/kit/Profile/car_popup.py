
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from pathlib import Path
from tkinter import Tk, Canvas, Scrollbar, Frame, VERTICAL,Toplevel
from PIL import Image, ImageTk
import sqlite3

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\ASUS\PycharmProjects\pythonProject\Car Rental Tkinter Main\kit\Profile\assets\frame0")


def relative_to_assets(path: str) -> Path:
    """Construct a path relative to the assets directory."""
    return ASSETS_PATH / Path(path)


def open_car_popup(car_type):
    def custom_yview(*args, **kwargs):
        canvas.yview(*args, **kwargs)
        x = canvas.canvasx(0)
        y = canvas.canvasy(0)
        canvas.coords("background", x, y)

    # Use Toplevel instead of Tk
    window = Toplevel()
    window.geometry("600x800")
    window.configure(bg="black")

    # Frame to hold the Canvas and Scrollbar
    frame = Frame(window, width=600, height=800)
    frame.pack(fill="both", expand=True)

    # Create a Canvas with a scrollbar for scrollable content
    canvas = Canvas(
        frame,
        bg="green",
        height=800,
        width=600,
        scrollregion=(0, 0, 600, 2200)
    )
    canvas.pack(side="left", fill="both", expand=True)

    # Add vertical scrollbar to the frame
    scrollbar = Scrollbar(frame, orient=VERTICAL, command=lambda *args: custom_yview(*args))
    scrollbar.pack(side="right", fill="y")

    # Configure the canvas to use the scrollbar
    canvas.configure(yscrollcommand=scrollbar.set)
    canvas.yview_moveto(0)  # Set scrollbar position to the top






    # Adding static header to canvas (place it in front of the background)
    popup_header = ImageTk.PhotoImage(Image.open(relative_to_assets("popup_header.png")))
    canvas.create_image(300.0, 34.0, image=popup_header,tags="background")



    # Database connection to fetch the car type and details
    conn = sqlite3.connect(r"C:\Users\ASUS\PycharmProjects\pythonProject\Car Rental Tkinter Main\chen\buildregister\customer_registration.db")
    cursor = conn.cursor()

    canvas.create_text(
        33.0,
        18.0,
        anchor="nw",
        text=f"Available Cars - {car_type}",
        fill="#FFFFFF",
        font=("Helvetica", 25, "bold")
    )

    # Fetch car details based on the car type
    cursor.execute("SELECT seating_capacity, rate, make_model, image_path FROM car WHERE car_type = ?", (car_type,))
    cars = cursor.fetchall()
    conn.close()

    # Initial position for the first car container
    y_position = 260

    # Adding scrollable car containers based on the count of cars
    car_container = ImageTk.PhotoImage(Image.open(relative_to_assets("car_container.png")))
    image_border = ImageTk.PhotoImage(Image.open(relative_to_assets("image_border.png")))

    image_border_width = 235
    image_border_height = 231

    car_images = []

    for car in cars:
        seating_capacity, rate, make_model, image_path = car

        # Car container
        canvas.create_image(297.0, y_position, image=car_container)

        # Car details
        canvas.create_text(338.0, y_position - 54, anchor="nw", text=f"Seat capacity: {seating_capacity}", fill="#000000", font=("Roboto Bold", 24 * -1))
        canvas.create_text(385.0, y_position + 9, anchor="nw", text=f"Rate: RM{rate:.2f}", fill="#000000", font=("Roboto Bold", 22 * -1))

        # Image border for the car image
        canvas.create_image(154.0, y_position - 1, image=image_border)

        # Load and resize the car image inside the image border
        car_image = Image.open(image_path)
        car_image = car_image.resize((image_border_width, image_border_height), Image.LANCZOS)
        car_image_tk = ImageTk.PhotoImage(car_image)

        car_images.append(car_image_tk)  # Keep a reference to avoid garbage collection
        canvas.create_image(154.0, y_position - 1, image=car_image_tk, anchor="center")

        # Make model displayed at the bottom right
        canvas.create_text(527.0, y_position + 135, anchor="se", text=f"Model: {make_model}", fill="#FFFFFF", font=("Helvetica", 16, "bold"))

        y_position += 343

        def on_mouse_wheel(event):
            canvas.yview_scroll(int(-1 * (event.delta / 120)), "units")

        canvas.bind_all("<MouseWheel>", on_mouse_wheel)
        canvas.config(scrollregion=canvas.bbox("all"))

    window.resizable(False, False)
    window.mainloop()
